@model ViewModels.Input.TeamViewModel
@inject Core.Data.Repositories.Interfaces.IProjectRepository ProjectRepo
@inject Core.Data.Repositories.Interfaces.IUserRepository UserRepo

@{
    ViewData["Title"] = "Създай екип";
}

<div class="container my-4">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-10">
            <div class="card shadow-sm">
                <div class="card-header bg-orange text-white">
                    <h4 class="mb-0">Създай екип</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" asp-controller="Team" method="post" novalidate>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label class="form-label" for="Name">Име</label>
                            <input asp-for="Name" class="form-control" placeholder="Въведете име на екипа...">
                            <span asp-validation-for="Name" class="invalid-feedback"></span>
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="ProjectName">Проект</label>
                            <select class="form-control" asp-for="ProjectName">
                                @foreach (var project in ProjectRepo.GetProjects())
                                {
                                    <option>@project.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="TeamLeaderUsername">Team Lead</label>
                            <select class="form-control" asp-for="TeamLeaderUsername">
                                @foreach (var teamLead in UserRepo.GetUsers().Where(x => x.Role.Name == "Team Lead"))
                                {
                                    <option>@teamLead.UserName</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label" for="DevelopersUsernames">Разработчици</label>
                            <input asp-for="DevelopersUsernames" class="form-control" id="devs" placeholder="Въведете разработчици на екипа...">
                            <span asp-validation-for="DevelopersUsernames" class="invalid-feedback"></span>
                        </div>
                        <div class="form-group text-center">
                            <button type="button" class="btn btn-outline-secondary" onclick="GetMoreDevelopers()">Добави още разработчици</button>
                        </div>
                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-orange btn-lg">Създай</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function AddMoreDevelopers() {
        var developersField = document.querySelector('input[name="DevelopersUsernames"]');
        var newField = document.createElement('input');
        newField.type = 'text';
        newField.name = 'DevelopersUsernames';
        newField.classList.add('form-control', 'dark-heading', 'mt-2');
        newField.placeholder = 'Въведете още разработчици...';
        newField.required = true;
        developersField.parentNode.insertBefore(newField, developersField.nextSibling);
    }
</script>


<script>
	function GetMoreDevelopers() {
		var myDiv = document.getElementById("developersDiv");
		var mySelect = document.getElementById("developerSelect");

		var selectList = mySelect.cloneNode(true);
		myDiv.appendChild(selectList);
	}

	function AddDev() {
		var list = document.getElementById("devs");
		var devNames = document.getElementsByClassName("select");
		for (var i = 0; i < priceEls.length; i++) {
			var price = devNames[i].innerText;
			list.innerHTML += price + " ";
		}

	}
</script>