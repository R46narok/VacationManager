@using Core.Data.Repositories.Interfaces
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Core.ViewModels.ProjectViewModel
@inject ITeamRepository TeamRepo

@{
    ViewData["Title"] = "Детайли за проект";
}

<body class="bg-orange">
    <div class="container pb-5">
        <div class="row justify-content-center lower">
            <div class="col-md-6 register-form-bg rounded">
                <div class="text-center">
                    <h2 class="dark-heading b">Преглед на проект</h2>
                    <br>
                </div>
                <div class="form-group">
                    <label class="control-label dark-heading">Име на проекта:</label>
                    <div>@Model.Name</div>
                </div>
                <div class="form-group">
                    <label class="control-label dark-heading">Описание:</label>
                    <div>@Model.Description</div>
                </div>
                <div class="form-group">
                    <label class="control-label dark-heading">Екипи:</label>
                    @if (Model.Teams is not null && Model.Teams.Any())
                    {
                        <ul>
                            @foreach (var team in Model.Teams)
                            {
                                <li>@team.Name</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div>Няма добавени екипи.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>


<script>
	function GetMoreTeams() {
		var myDiv = document.getElementById("teamsDiv");

		var selectList = document.createElement("select");
		selectList.setAttribute("id", "mySelect");
		selectList.classList.add("form-control");
		selectList.classList.add("dark-heading");
		selectList.classList.add("pb-2");
		myDiv.appendChild(selectList);

		for (var i = 0; i < document.getElementById("firstSelect").length; i++) {
			var option = document.createElement("option");
			option.setAttribute("value", document.getElementById("option_" + (i + 1)).textContent);
			option.innerHTML = document.getElementById("option_" + (i + 1)).innerHTML;
			selectList.appendChild(option);
			console.log(document.getElementById("option_" + (i + 1)));
		}
	}
</script>