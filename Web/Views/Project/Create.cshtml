@model Core.ViewModels.ProjectViewModel
@inject Core.Data.Repositories.Interfaces.ITeamRepository TeamRepo

@{
    ViewData["Title"] = "Създай проект";
}

<body class="bg-light">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8 bg-white rounded p-4">
                <h2 class="text-center mb-4">Create Project</h2>
                <form asp-action="Create" asp-controller="Project" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Project Name</label>
                        <input asp-for="Name" class="form-control" placeholder="Enter project name...">
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Project Description</label>
                        <textarea asp-for="Description" class="form-control" placeholder="Enter project description..."></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group text-center">
                        <input type="submit" id="register" value="Create Project" class="btn btn-primary btn-lg rounded">
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>


<script>
	function GetMoreTeams() {
		var myDiv = document.getElementById("teamsDiv");

		var selectList = document.createElement("select");
		selectList.setAttribute("id", "mySelect");
		selectList.classList.add("form-control");
		selectList.classList.add("dark-heading");
		selectList.classList.add("pb-2");
		myDiv.appendChild(selectList);

		for (var i = 0; i < document.getElementById("firstSelect").length; i++) {
			var option = document.createElement("option");
			option.setAttribute("value", document.getElementById("option_" + (i + 1)).textContent);
			option.innerHTML = document.getElementById("option_" + (i + 1)).innerHTML; 
			selectList.appendChild(option);
			console.log(document.getElementById("option_" + (i + 1)));
		}
	}
</script>